{"version":3,"sources":["vmslogo.png","components/Main.js","components/Constant.js","components/Patient/PatientLogin.js","components/Patient/PatientRegister.js","components/GP/Tabs/Appointments.js","components/Patient/PTDashboard.js","components/Patient/Appointment.js","components/GP/GPLogin.js","components/GP/Tabs/CheckingIn.js","components/GP/Tabs/Edit.js","components/GP/GPDashboard.js","components/GP/GPRegister.js","minilogo.png","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Main","style","display","justifyContent","Card","width","border","margin","Img","variant","src","vmslogo","height","Body","Container","fluid","Row","className","Col","to","Button","BACKEND_URL_PATIENTS","process","BACKEND_URL_GPS","BACKEND_URL_APPOINTMENTS","PatientLogin","props","useState","email","setEmail","password","setPassword","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","event","target","onClick","preventDefault","data","axios","post","then","response","localStorage","setItem","JSON","stringify","ptoken","history","push","catch","err","setToastError","setErrorMessage","message","submitLogin","PatientRegister","name","setName","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","NRIC","setNRIC","get","setToastSuccess","setSuccessMessage","error","console","log","fetchData","required","defaultValue","minLength","pattern","length","res","register","Appointments","Table","striped","bordered","hover","appointments","map","element","index","aid","date","vaccineType","status","disabled","setEdit","deleteAppointment","id","PTDashboard","toggle","setToggle","setAppointments","React","modalShow","setModalShow","useEffect","token","parse","getItem","pid","alert","Navbar","backgroundColor","Brand","href","Nav","Link","Image","Header","clinicName","Text","HealthCheckUpModal","show","onHide","alter","Accordion","bg","text","Toggle","as","eventKey","Collapse","Modal","size","aria-labelledby","centered","closeButton","Title","Check","inline","label","sm","span","offset","Footer","Appointment","setVaccineType","setDate","gps","setGps","gpid","setGpid","onSubmit","info","createAppointment","readOnly","e","format","GPLogin","gptoken","CheckingIn","appointment","setAppointment","setID","appointmentDate","setAppointmentDate","put","toggleUpdate","checkIn","Edit","updateAppointment","edit","newAppointmentDate","setNewAppointmentDate","GPDashboard","thisUser","setThisUser","update","setUpdate","removeItem","logout","Tabs","defaultActiveKey","Tab","title","address","indexOf","GPRegister","setClinicName","setAddress","adminCode","setAdminCode","Notification","position","top","right","Toast","toastSuccess","onClose","miniLogo","alt","successMessage","toastError","errorMessage","App","setTimeout","aria-live","aria-atomic","minHeight","exact","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db65423c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vmslogo.e647cd55.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Col, Row, Card } from \"react-bootstrap\";\nimport Image from 'react-bootstrap/Image';\nimport vmslogo from '../,,/../../src/vmslogo.png'; // the ../ is to change the directory!\n\nexport default function Main() {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center'}} >\n\n      <Card style={{ width: '80%', border: \"0px\" }}>\n        \n        <div style={{ margin: 'auto', width: '50%' }}>\n          <Card.Img variant=\"top\" src={vmslogo} style={{ height: '100%', width: '100%', justifyContent: 'center' }} />\n        </div>\n\n\n        <Card.Body>\n\n          <Container fluid >\n            <Row className=\"m-3\">\n              <Col>\n                <Link to=\"/patient\" style={{ display: 'flex', justifyContent: 'center' }}>\n                  <Button variant=\"primary\" className=\"mx-2\" >\n                    Proceed as Patient\n                  </Button>\n                </Link>\n              </Col>\n\n              <Col>\n                <Link to=\"/gp\" style={{ display: 'flex', justifyContent: 'center' }}>\n                  <Button variant=\"primary\" className=\"mx-2\" >\n                    Proceed as GP\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          </Container>\n\n        </Card.Body>\n      </Card>\n\n\n\n\n\n\n\n\n\n\n\n{/* \n      <Image src={vmslogo} style={{ height: '100%', width: '100%' }} fluid />\n      <br></br>\n      <h4 style={{ display: 'flex', justifyContent: 'center' }}>Welcome to Vaccination Management System! </h4>\n      <br></br>\n      <Container fluid >\n        <Row className=\"m-3\">\n          <Col>\n            <Link to=\"/patient\" style={{ display: 'flex', justifyContent: 'center' }}>\n              <Button variant=\"primary\" className=\"mx-2\" >\n                Proceed as Patient\n        </Button>\n            </Link>\n          </Col>\n\n          <Col>\n            <Link to=\"/gp\" style={{ display: 'flex', justifyContent: 'center' }}>\n              <Button variant=\"primary\" className=\"mx-2\" >\n                Proceed as GP\n        </Button>\n            </Link>\n          </Col>\n        </Row>\n      </Container> */}\n\n    </div>\n  );\n}\n\n","export const BACKEND_URL_PATIENTS =\n  process.env.REACT_APP_BACKEND_URL_PATIENTS ||\n  \"http://localhost:5000/patients\";\nexport const BACKEND_URL_GPS =\n  process.env.REACT_APP_BACKEND_URL_GPS || \"http://localhost:5000/gps\";\nexport const BACKEND_URL_APPOINTMENTS =\n  process.env.REACT_APP_BACKEND_URL_APPOINTMENTS ||\n  \"http://localhost:5000/appointments\";\nexport const BACKEND_URL_TESTS =\n  process.env.REACT_APP_BACKEND_URL_TESTS || \"http://localhost:5000/tests\";\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_PATIENTS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PatientLogin(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitLogin = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      props.setToastError(true);\n      props.setErrorMessage(\"Please key in required field!\");\n    } else {\n      let data = {\n        email: email,\n        password: password,\n      };\n      axios\n        .post(`${BACKEND_URL_PATIENTS}/login`, data)\n        .then((response) => {\n          localStorage.setItem(\"ptoken\", JSON.stringify(response.data.ptoken));\n          props.history.push(\"/patient/dashboard\");\n        })\n        .catch((err) => {\n          props.setToastError(true);\n          if (!err.response) {\n            props.setErrorMessage(err);\n          } else if (!err.response.data) {\n            props.setErrorMessage(err.response);\n          } else {\n            props.setErrorMessage(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Patient Portal</h1>\n      <Form className=\"m-3\">\n        <Form.Group controlId=\"login\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email address\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={(event) => submitLogin(event)}\n        >\n          Sign in\n        </Button>\n        <Link to=\"/patient/register\">\n          <Button type=\"submit\" variant=\"primary\" className=\"mx-2\">\n            Register\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_PATIENTS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nfunction PatientRegister(props) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [NRIC, setNRIC] = useState(\"\");\n\n  const fetchData = (event) => {\n    event.preventDefault();\n    if (NRIC !== \"\") {\n      axios\n        .get(`${BACKEND_URL_PATIENTS}/fetch/${NRIC}`)\n        .then((response) => {\n          setName(response.data.name);\n          setEmail(response.data.email);\n          setPhoneNumber(response.data.phoneNumber);\n          props.setToastSuccess(true);\n          props.setSuccessMessage(`Your information has been successfully fetched.\n        Please ensure that all the details are correct before \n        proceeding with the registration.`);\n        })\n        .catch((error) => {\n          props.setToastError(true);\n          if (!error.response) {\n            console.log(error);\n            props.setErrorMessage(error);\n          } else if (!error.response.data) {\n            console.log(error.response);\n            props.setErrorMessage(error.message);\n          } else {\n            props.setErrorMessage(error.response.data.message);\n          }\n        });\n    } else {\n      props.setToastError(true);\n      props.setErrorMessage(\"Please enter your NRIC/FIN.\");\n    }\n  };\n\n  const register = (event) => {\n    event.preventDefault();\n    if (!name || !email || !password) {\n      props.setToastError(true);\n      props.setErrorMessage(\"Please fill in required fields!\");\n    } else if (password.length < 8) {\n      props.setToastError(true);\n      props.setErrorMessage(\n        \"Please enter at least 8 characters in password field!\"\n      );\n    } else if (password !== confirmPassword) {\n      props.setToastError(true);\n      props.setErrorMessage(\"Confirm password not match!\");\n    } else {\n      axios\n        .post(`${BACKEND_URL_PATIENTS}/create`, {\n          name: name,\n          email: email,\n          password: password,\n          phoneNumber: phoneNumber,\n        })\n        .then((res) => {\n          props.setToastSuccess(true);\n          console.log(res.data);\n          props.setSuccessMessage(\"Registeration successful\");\n          props.history.push(\"/patient\");\n        })\n        .catch((error) => {\n          props.setToastError(true);\n          if (!error.response) {\n            props.setErrorMessage(error);\n          } else if (!error.response.data) {\n            props.setErrorMessage(error.response);\n          } else {\n            props.setErrorMessage(error.response.data.message);\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Patient Register</h1>\n      <Form>\n        <Form.Group controlId=\"nric\">\n          <Form.Label>Key in NRIC / FIN</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type in NRIC / FIN to fill in data.\"\n            value={NRIC}\n            onChange={(event) => setNRIC(event.target.value)}\n          />\n          <Button onClick={(event) => fetchData(event)}>fetch info</Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"name\"\n            required\n            defaultValue={name}\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"email\"\n            required\n            defaultValue={email}\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password(8 characters)\"\n            required\n            minLength=\"8\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"confirm password\"\n            required\n            minLength=\"8\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"phonenumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"phone\"\n            placeholder=\"phone number\"\n            pattern=\"^[8-9][0-9]{7}$\"\n            required\n            defaultValue={phoneNumber}\n            value={phoneNumber}\n            onChange={(event) => setPhoneNumber(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={(event) => register(event)}\n        >\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default PatientRegister;\n","import React from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\n\nexport default function Appointments(props) {\n  return (\n    <>\n      <Table striped bordered hover variant=\"outlined-light\">\n        <thead>\n          <tr>\n            <th>S/N</th>\n            <th>Appt. ID</th>\n            <th>Patient Name</th>\n            <th>Appointment Date</th>\n            <th>Vaccive Type</th>\n            <th>Status</th>\n            <th>Next Appointment</th>\n            <th>Edit Appt.</th>\n            <th>Delete Appt.</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.appointments &&\n            props.appointments.map((element, index) => {\n              return (\n                <tr key={index + 1}>\n                  <td>{index + 1}</td>\n                  <td>{element.aid}</td>\n                  <td>{element.name}</td>\n                  <td>{element.date}</td>\n                  <td>{element.vaccineType}</td>\n                  <td>{element.status}</td>\n                  <td>\n                    <Button\n                      variant={\n                        element.status === \"completed\"\n                          ? \"outline-success\"\n                          : \"outline-secondary\"\n                      }\n                      disabled={element.status !== \"completed\"}\n                    >\n                      Schedule\n                    </Button>\n                  </td>\n                  <td>\n                    <Button\n                      variant={\n                        element.status === \"pending\"\n                          ? \"outline-warning\"\n                          : \"outline-secondary\"\n                      }\n                      onClick={() => props.setEdit(element)}\n                      disabled={element.status === \"completed\"}\n                    >\n                      Edit\n                    </Button>\n                  </td>\n                  <td>\n                    <Button\n                      variant={\n                        element.status === \"pending\"\n                          ? \"outline-danger\"\n                          : \"outline-secondary\"\n                      }\n                      onClick={() =>\n                        props.deleteAppointment(element.id, element)\n                      }\n                      disabled={element.status === \"completed\"}\n                    >\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","//------------------------------------------- IMPORTS ----------------------------------------------------\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Table,\n  Nav,\n  Modal,\n  Navbar,\n  FormControl,\n  Container,\n  Row,\n  Col,\n  Accordion,\n  Card,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Appointments from \"../GP/Tabs/Appointments\";\nimport { BACKEND_URL_APPOINTMENTS } from \"../Constant\";\nimport Image from \"react-bootstrap/Image\";\nimport vmslogo from \"../../../src/vmslogo.png\";\n\n\nexport default function PTDashboard(props) {\n\n  //--------------------------------------------- VARIABLES -----------------------------------------------\n  const [toggle, setToggle] = useState(false);\n  const [appointments, setAppointments] = useState([]);\n  const [modalShow, setModalShow] = React.useState(false);\n\n\n\n\n  //--------------------------------------------- FUNCTIONS -----------------------------------------------\n\n  //--- Retrieval Function ---\n  useEffect(() => {\n    let token = JSON.parse(localStorage.getItem(\"ptoken\"));\n    if (!token) {\n      alert(\"Please login to use the system!\");\n      props.history.push(\"/patient\");\n    } else {\n      axios\n        .get(`${BACKEND_URL_APPOINTMENTS}/pid/${token.pid}`)\n        .then((response) => {\n          console.log(response);\n          setAppointments(response.data);\n        })\n        .catch((error) => {\n          props.setToastError(true);\n          if (!error.response) {\n            props.setErrorMessage(error);\n          } else if (!error.response.data) {\n            props.setErrorMessage(error.response);\n          } else {\n            props.setErrorMessage(error.response.data.message);\n          }\n        });\n    }\n  }, []);\n\n\n  //--- Appointment Deletion Function ---\n  const deleteAppointment = (id, info) => {\n    console.log(id);\n    console.log(info);\n  };\n\n  //--- Patient Checkin Function ---\n  const checkIn = (event) => {\n    event.preventDefault();\n  };\n\n  //--- Logout Function ---\n  const logout = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"ptoken\");\n    props.history.push(\"/patient\");\n  };\n\n  //--- Health Checkup Toggle Function ---\n  const check = (event) => {\n    event.preventDefault();\n    console.log(toggle);\n  };\n\n  //--------------------------------------- PATIENT DASHBOARD DESIGN BEGINS NOW!!! ----------------------------------\n  return (\n    <div className=\"App mt-5\">\n\n\n      {/*---------------------------------- NAVIGATION BAR -----------------------------------------*/}\n      <Navbar className=\"text-white\" style={{ backgroundColor: \"#1c1f54ff\" }} variant=\"dark\">\n        <Navbar.Brand href=\"#home\">My Dashboard</Navbar.Brand>\n\n\n        <Nav className=\"mr-auto\">\n          <Link to=\"/patient/appointment\">\n            <Nav.Link href=\"#myAppointments\">New Appointment</Nav.Link>\n          </Link>\n          <Link to=\"\">\n            <Nav.Link href=\"#logout\">logout</Nav.Link>\n          </Link>\n        </Nav>\n\n        <Image src={vmslogo} style={{ height: \"50px\" }} />\n      </Navbar>\n\n\n      {/* Creating the containers in Patient Dashboard */}\n\n      <Container fluid>\n\n        {/* ----------------------------------- UPCOMING APPOINTMENT ------------------------------- */}\n        <Row className=\"m-3\">\n          <Col>\n            <Card style={{ width: \"Auto\", border: \" 1px solid #375efc\" }}>\n              <Card.Header\n                className=\"text-white\"\n                style={{ backgroundColor: \"#375efc\" }}\n              >\n                Upcoming Appointments\n              </Card.Header>\n              <Card.Body>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Date</th>\n                      <th>Vacine Type</th>\n                      <th>GP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {appointments.map((element) => {\n                      return (\n                        <tr key={element.aid} id={element.aid}>\n                          <td>{element.aid}</td>\n                          <td>{element.date}</td>\n                          <td>{element.vaccineType}</td>\n                          <td>{element.clinicName}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n\n        {/* -------------------------------------- HEALTH CHECKUP -------------------------------------- */}\n        <Row className=\"m-3\">\n          <Col>\n\n            <Card border={!toggle ? \"warning\" : \"success\"}>\n              <Card.Header className={!toggle ? \"bg-warning\" : \"bg-success text-white\"}>\n                Health Checkup!\n              </Card.Header>\n\n\n              <Card.Body>\n                <Card.Text>Update your daily progress!</Card.Text>\n\n                <Button\n                  variant={!toggle ? \"warning\" : \"success\"}\n                  onClick={() => setModalShow(true)}\n                >\n                  {!toggle ? \"start\" : \"completed\"}\n                </Button>\n\n                <HealthCheckUpModal\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                  alter={(event) => {\n                    event.preventDefault();\n                    setToggle(!toggle);\n                    setModalShow(false);\n                  }}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card border=\"danger\" style={{ width: \"Auto\" }}>\n              <Card.Header className=\"bg-danger text-white\">\n                Emergency Hotlines!\n              </Card.Header>\n\n              <Card.Body>\n                <Card.Text>Reach out to an officer!</Card.Text>\n                <Button variant=\"danger\">Call</Button>{\" \"}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* ----------------------------USEFUL INFORMATION-------------------------*/}\n        <Row className=\"m-3\">\n          <Col>\n            <Card style={{ width: \"Auto\", border: \" 1px solid #375efc\" }}>\n              <Card.Header\n                className=\"text-white\"\n                style={{ backgroundColor: \"#375efc\" }}\n              >\n                Useful Information\n              </Card.Header>\n              <Card.Body className=\"m-2\">\n                <Accordion className=\"m-1\">\n                  <Card>\n                    <Card.Header bg=\"info\" text=\"white\">\n                      <Accordion.Toggle as={Link} text=\"white\" eventKey=\"0\">\n                        Vaccination side effects!\n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                      <Card.Body>\n                        <li>Vommitting</li>\n                        <li>Nausea</li>\n                        <li>Pain</li>\n                        <li>Breathlessness</li>\n                        <li>Panic</li>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                </Accordion>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n//Helth Checkup Modal!\nfunction HealthCheckUpModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Vaccination Monitoring Procedure\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Please provide the required information!</p>\n\n        {/* Health Checup Form    */}\n        <Form>\n          <fieldset>\n            {/* Pain */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>\n                    Are you experiencing pain anywhere in your body?\n                  </Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Fever */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Are you having headaches/fever/chills?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Bearable\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Extreme\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Rashes?                 */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>\n                    Are there any Signs of redness or rashes on your skin?\n                  </Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Exhausted         */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Are you feeling tired or exhausted?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"A little\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Exhausted\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Nausea?         */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text> Any feeling of sickness or nausea?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"A little\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"I need assistance!\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Sudden loss or gain of weight?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n          </fieldset>\n\n          <Form.Group as={Row}>\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\" onClick={(event) => props.alter(event)}>\n                Submit\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\n//------------------------------------------------REFERENCES--------------------------------------------------\n// 1. Brand color: #1c1f54ff - Background, \"#375efc\" - Syringe, \n\n\n\n\n//FOR TESTING PURPOSES!!!\n\n{/* THIS SEARCH BUTTON IS FOR TESTNG PURPOSES */ }\n{/* <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-light\" onClick={(event) => check(event)} >Search</Button>\n        </Form> */}","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { BACKEND_URL_APPOINTMENTS, BACKEND_URL_GPS } from \"../Constant\";\n\nexport default function Appointment(props) {\n  const [vaccineType, setVaccineType] = useState(\"Covid-19\");\n  const [date, setDate] = useState(\"\");\n  const [gps, setGps] = useState([]);\n  const [gpid, setGpid] = useState(\"\");\n  const [clinicName, setClinicName] = useState(\"\");\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"ptoken\");\n    if (!token) {\n      alert(\"Please login to make an appointment!\");\n      props.history.push(\"/patient\");\n    } else {\n      axios\n        .get(`${BACKEND_URL_GPS}`)\n        .then((response) => {\n          setGps(response.data);\n        })\n        .catch((err) => {\n          props.setToastError(true);\n          if (!err.response) {\n            console.log(err);\n            props.setErrorMessage(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n            props.setErrorMessage(err.response);\n          } else {\n            props.setErrorMessage(err.response.data.message);\n          }\n        });\n    }\n  }, []);\n\n  const createAppointment = (event) => {\n    event.preventDefault();\n    if (!date || !vaccineType || !gpid) {\n      props.setToastError(true);\n      props.setErrorMessage(\"Please fill in required field!\");\n    } else {\n      axios\n        .get(`${BACKEND_URL_GPS}/id/${gpid}`)\n        .then((res) => {\n          let info = JSON.parse(localStorage.getItem(\"ptoken\"));\n          let data = {\n            pid: info.pid,\n            name: info.name,\n            phoneNumber: info.phoneNumber,\n            vaccineType: vaccineType,\n            date: date,\n            gpid: gpid,\n            clinicName: res.data[0].clinicName,\n          };\n          axios\n            .post(`${BACKEND_URL_APPOINTMENTS}/create`, data)\n            .then((response) => {\n              props.setToastSuccess(true);\n              console.log(response);\n              props.setSuccessMessage(response.data.message);\n              props.history.push(\"/patient/dashboard\");\n            })\n            .catch((err) => {\n              props.setToastError(true);\n              if (!err.response) {\n                props.setErrorMessage(err);\n              } else if (!err.response.data) {\n                props.setErrorMessage(err.response);\n              } else {\n                props.setErrorMessage(err.response.data.message);\n              }\n            });\n        })\n        .catch((err) => {\n          props.setToastError(true);\n          if (!err.response) {\n            props.setErrorMessage(err);\n          } else if (!err.response.data) {\n            props.setErrorMessage(err.response);\n          } else {\n            props.setErrorMessage(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Book New Appointment</h2>\n        <Form onSubmit={(event) => createAppointment(event)} className=\"m-3\">\n          <Form.Group controlId=\"vaccination\">\n            <Form.Label>Vaccination Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={vaccineType}\n              readOnly\n              onChange={(e) => setVaccineType(e.target.value)}\n            >\n              <option>Covid-19</option>\n              <option>Influenza</option>\n              <option>Hepatitis</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"date\">\n            <Form.Label>Appointment Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              placeholder=\"Select date...\"\n              format=\"YYYY-Mmm-DD\"\n              value={date}\n              onChange={(event) => setDate(event.target.value)}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"generalpractitioner\">\n            <Form.Label>GP</Form.Label>\n            <Form.Control\n              as=\"select\"\n              defaultValue=\"Choose...\"\n              value={gpid}\n              onChange={(e) => setGpid(e.target.value)}\n            >\n              <option>Choose...</option>\n              {gps.map((element) => {\n                return (\n                  <option key={element.gpid} value={element.gpid}>\n                    {element.clinicName}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_GPS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function GPLogin(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitLogin = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      props.setToastError(true);\n      props.setErrorMessage(\"Please key in required field!\");\n    } else {\n      let data = {\n        email: email,\n        password: password,\n      };\n      axios\n        .post(`${BACKEND_URL_GPS}/login`, data)\n        .then((response) => {\n          localStorage.setItem(\n            \"gptoken\",\n            JSON.stringify(response.data.gptoken)\n          );\n          props.history.push(\"/gp/dashboard\");\n        })\n        .catch((err) => {\n          props.setToastError(true);\n          if (!err.response) {\n            console.log(err);\n            props.setErrorMessage(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n            props.setErrorMessage(err.response);\n          } else {\n            props.setErrorMessage(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>GP Portal</h1>\n      <Form className=\"m-3\">\n        <Form.Group controlId=\"login\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email address\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={(event) => submitLogin(event)}\n        >\n          Sign in\n        </Button>\n        <Link to=\"gp/register\">\n          <Button variant=\"primary\" className=\"mx-2\">\n            Register\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BACKEND_URL_APPOINTMENTS, BACKEND_URL_PATIENTS } from \"../../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default function CheckingIn(props) {\n  const [appointment, setAppointment] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\n  const [NRIC, setNRIC] = useState(\"\");\n\n  useEffect(() => {\n    setID(appointment.aid);\n    setName(appointment.name);\n    setAppointmentDate(appointment.date);\n  }, [appointment]);\n\n  const checkIn = (event) => {\n    event.preventDefault();\n    if (!id || !name || !appointmentDate) {\n      alert(\"Please enter required field!\");\n    } else {\n      axios\n        .put(`${BACKEND_URL_APPOINTMENTS}/id/${id}/status/completed`)\n        .then((response) => {\n          console.log(response);\n          props.setToastSuccess(true);\n          props.setSuccessMessage(response.data.message);\n          setNRIC(\"\");\n          setID(\"\");\n          setName(\"\");\n          setAppointmentDate(\"\");\n          setAppointment(\"\");\n          props.toggleUpdate();\n        })\n        .catch((err) => {\n          props.setToastError(true);\n          if (!err.response) {\n            console.log(err);\n            props.setErrorMessage(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n            props.setErrorMessage(err.response);\n          } else {\n            props.setErrorMessage(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  const fetchData = (event) => {\n    event.preventDefault();\n    let { gpid } = JSON.parse(localStorage.getItem(\"gptoken\"));\n    if (!NRIC) {\n      props.setToastError(true);\n      props.setErrorMessage(\"Please enter NRIC to use this feature!\");\n    } else {\n      axios.get(`${BACKEND_URL_PATIENTS}/fetch/${NRIC}`).then((response) => {\n        console.log(response);\n        axios\n          .get(\n            `${BACKEND_URL_APPOINTMENTS}/gpid/${gpid}/email/${response.data.email}`\n          )\n          .then((response) => {\n            console.log(response);\n            if (response.data.length === 1) {\n              setAppointment(response.data[0]);\n              props.setToastSuccess(true);\n              props.setSuccessMessage(\"Appointment found!\");\n            }\n          })\n          .catch((err) => {\n            props.setToastError(true);\n            if (!err.response) {\n              console.log(err);\n              props.setErrorMessage(err);\n            } else if (!err.response.data) {\n              console.log(err.response);\n              props.setErrorMessage(err.response);\n            } else {\n              props.setErrorMessage(err.response.data.message);\n            }\n          });\n      });\n    }\n  };\n  return (\n    <>\n      <Form onSubmit={(event) => checkIn(event)} className=\"m-3\">\n        <h2>Key in</h2>\n        <Form.Group controlId=\"nric\">\n          <Form.Label>NRIC / FIN</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type in NRIC / FIN to fill in data.\"\n            value={NRIC}\n            onChange={(event) => setNRIC(event.target.value)}\n          />\n          <Button\n            className=\"my-3\"\n            variant=\"outline-primary\"\n            onClick={(event) => fetchData(event)}\n          >\n            fetch info\n          </Button>\n        </Form.Group>\n        <h2>-------------------- Or --------------------</h2>\n        <Form.Group controlId=\"id\">\n          <Form.Label>Appointment ID</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter appointment ID\"\n            value={id}\n            required\n            onChange={(event) => setID(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"patientname\">\n          <Form.Label>Patient's Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter patient's name\"\n            value={name}\n            required\n            onChange={(event) => setName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"vaccinetype\">\n          <Form.Label>Vaccination Type</Form.Label>\n          <Form.Control type=\"text\" value=\"Covid-19\" readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"date\">\n          <Form.Label>Appointment Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            placeholder=\"Enter date of appointment\"\n            value={appointmentDate}\n            required\n            onChange={(event) => setAppointmentDate(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          variant=\"outline-primary\"\n          type=\"submit\"\n          className=\"m-5\"\n          disabled={!id || !name || !appointmentDate ? true : false}\n        >\n          Check-In\n        </Button>\n\n        {/* <Button variant=\"outline-primary\" type=\"submit\" className=\"m-5\">\n              Scan QR Code\n            </Button> */}\n      </Form>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default function Edit(props) {\n  return (\n    <>\n      <Form\n        className=\"m-3\"\n        onSubmit={(event) => {\n          props.updateAppointment(event, props.edit.aid);\n        }}\n      >\n        <Form.Group controlId=\"patientname\">\n          <Form.Label>Patient's Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter patient's name\"\n            value={props.edit.name}\n            readOnly\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"vaccinetype\">\n          <Form.Label>Vaccination Type</Form.Label>\n          <Form.Control type=\"text\" value=\"Covid-19\" readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"oridate\">\n          <Form.Label>Original Appointment Date</Form.Label>\n          <Form.Control type=\"date\" value={props.edit.date} readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"newdate\">\n          <Form.Label>New Appointment Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            placeholder=\"Enter date of appointment\"\n            value={props.newAppointmentDate}\n            onChange={(event) =>\n              props.setNewAppointmentDate(event.target.value)\n            }\n          />\n        </Form.Group>\n\n        <Button variant=\"outline-primary\" type=\"submit\" className=\"m-5\">\n          Update\n        </Button>\n\n        <Button\n          variant=\"outline-danger\"\n          type=\"button\"\n          className=\"m-5\"\n          onClick={() => props.setEdit(null)}\n        >\n          Cancel\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BACKEND_URL_APPOINTMENTS } from \"../Constant\";\nimport { Button, Tabs, Tab } from \"react-bootstrap\";\nimport CheckingIn from \"./Tabs/CheckingIn\";\nimport Appointments from \"./Tabs/Appointments\";\nimport Edit from \"./Tabs/Edit\";\n\nexport default function GPDashboard(props) {\n  const [appointments, setAppointments] = useState([]);\n  const [thisUser, setThisUser] = useState(null);\n  const [newAppointmentDate, setNewAppointmentDate] = useState(\"\");\n  // const [patients, setPatients] = useState([]);\n  const [edit, setEdit] = useState(null);\n  const [update, setUpdate] = useState(false);\n\n  useEffect(() => {\n    let info = JSON.parse(localStorage.getItem(\"gptoken\"));\n    if (!info) {\n      alert(\"Please login to use this page!\");\n      props.history.push(\"/gp\");\n    } else {\n      setThisUser(info);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (thisUser) {\n      axios\n        .get(`${BACKEND_URL_APPOINTMENTS}/gpid/${thisUser.gpid}`)\n        .then((response) => {\n          setAppointments(response.data);\n        })\n        .catch((err) => {\n          props.setToastError(true);\n          if (!err.response) {\n            console.log(err);\n            props.setErrorMessage(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n            props.setErrorMessage(err.message);\n          } else {\n            props.setErrorMessage(err.response.data.message);\n          }\n        });\n    }\n  }, [thisUser, update]);\n\n  const toggleUpdate = () => {\n    setUpdate(!update);\n  };\n\n  const deleteAppointment = (id, info) => {\n    console.log(id);\n    console.log(info);\n  };\n\n  const check = (event) => {\n    event.preventDefault();\n    console.log(thisUser);\n  };\n\n  const updateAppointment = (event, id) => {\n    event.preventDefault();\n    if (!newAppointmentDate) {\n      alert(\"Pleasee enter a date!\");\n    } else {\n      let data = {\n        date: newAppointmentDate,\n      };\n      axios\n        .put(`${BACKEND_URL_APPOINTMENTS}/id/${id}/changeDate`, data)\n        .then((response) => {\n          props.setToastSuccess(true);\n          props.setSuccessMessage(response.data.message);\n          setEdit(null);\n          setUpdate(!update);\n        })\n        .catch((err) => {\n          props.setToastError(true);\n          if (!err.response) {\n            console.log(err);\n            props.setErrorMessage(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n            props.setErrorMessage(err.response);\n          } else {\n            props.setErrorMessage(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"gptoken\");\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"App mt-5\">\n      <h2>GP Dashboard</h2>\n      <Button\n        variant=\"outline-danger\"\n        onClick={(event) => {\n          logout(event);\n        }}\n      >\n        Logout\n      </Button>\n      <Tabs defaultActiveKey=\"appointments\" id=\"uncontrolled-tab-example\">\n        {thisUser && (\n          <Tab eventKey=\"gpinfo\" title=\"GP Info\">\n            <h1 className=\"m-5\">My Clinic's Info</h1>\n            <div className=\"mx-5 text-left\">\n              <h2>Name: {thisUser.clinicName}</h2>\n              <h4>Address: {thisUser.address}</h4>\n              <h4>E-mail: {thisUser.email}</h4>\n            </div>\n          </Tab>\n        )}\n\n        <Tab eventKey=\"appointments\" title=\"Appointments\">\n          <h1 className=\"m-5\">Appointments</h1>\n          <div className=\"mx-5\">\n            <Appointments\n              appointments={appointments}\n              setEdit={setEdit}\n              deleteAppointment={deleteAppointment}\n            />\n          </div>\n        </Tab>\n\n        <Tab eventKey=\"checkin\" title=\"Check Patient In\">\n          <CheckingIn\n            toggleUpdate={toggleUpdate}\n            setToastSuccess={props.setToastSuccess}\n            setToastError={props.setToastError}\n            setSuccessMessage={props.setSuccessMessage}\n            setErrorMessage={props.setErrorMessage}\n          />\n        </Tab>\n\n        {edit && thisUser && (\n          <Tab\n            eventKey=\"edit\"\n            title={\n              \"Edit Appointment: S/N \" +\n              (appointments\n                .map(function (e) {\n                  return e.aid;\n                })\n                .indexOf(edit.aid) +\n                1)\n            }\n          >\n            <Edit\n              edit={edit}\n              newAppointmentDate={newAppointmentDate}\n              setNewAppointmentDate={setNewAppointmentDate}\n              setEdit={setEdit}\n              updateAppointment={updateAppointment}\n            />\n          </Tab>\n        )}\n        {/* Appointments */}\n        {/* user scan in */}\n        {/* Scan Appointment check-in */}\n      </Tabs>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_GPS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nfunction GPRegister(props) {\n  const [clinicName, setClinicName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [adminCode, setAdminCode] = useState(\"\");\n\n  const register = (event) => {\n    event.preventDefault();\n    if (\n      !clinicName ||\n      !address ||\n      !email ||\n      !password ||\n      !confirmPassword ||\n      !adminCode\n    ) {\n      props.setToastError(true);\n      props.setErrorMessage(\"Please fill in required field!\");\n    } else if (password === confirmPassword) {\n      axios\n        .post(`${BACKEND_URL_GPS}/create`, {\n          clinicName: clinicName,\n          address: address,\n          email: email,\n          password: password,\n          adminCode: adminCode,\n        })\n        .then((res) => {\n          props.setToastSuccess(true);\n          props.setSuccessMessage(res.data.message);\n          props.history.push(\"/gp\");\n        })\n        .catch((error) => {\n          console.log(error.response.status);\n          props.setToastError(true);\n\n          props.setErrorMessage(\"GP account exists in server!\");\n\n          if (!error.response) {\n            console.log(error);\n            props.setSuccessMessage(error);\n          } else if (!error.response.data) {\n            console.log(error.response);\n            props.setSuccessMessage(error.response);\n          } else {\n            props.setSuccessMessage(error.response.data.message);\n          }\n        });\n    } else {\n      props.setToastError(true);\n      props.setErrorMessage(\"Confirm password and password not matched!\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>GP Register</h1>\n      <Form onSubmit={(event) => register(event)} className=\"m-3\">\n        <Form.Group controlId=\"clinicname\">\n          <Form.Label>Clinic Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Clinic's name\"\n            required\n            value={clinicName}\n            onChange={(event) => setClinicName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"address\"\n            placeholder=\"last name\"\n            required\n            value={address}\n            onChange={(event) => setAddress(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"email\"\n            required\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password(8 characters)\"\n            required\n            minLength=\"8\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmpassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"confirm password\"\n            required\n            minLength=\"8\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"admincode\">\n          <Form.Label>Admin Code</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Admin code\"\n            required\n            value={adminCode}\n            onChange={(event) => setAdminCode(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default GPRegister;\n","export default __webpack_public_path__ + \"static/media/minilogo.103f8385.png\";","import React from \"react\";\nimport miniLogo from \"../minilogo.png\";\nimport { Toast } from \"react-bootstrap\";\n\nexport default function Notification(props) {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 20,\n        right: 20,\n      }}\n    >\n      <Toast\n        className=\"border-success text-success bg-success\"\n        show={props.toastSuccess}\n        onClose={() => props.setToastSuccess(false)}\n      >\n        <Toast.Header className=\"border-success\">\n          <img\n            src={miniLogo}\n            className=\"rounded mr-2\"\n            style={{ height: \"20px\" }}\n            alt=\"vms\"\n          />\n          <strong className=\"mr-auto text-success\">VMS</strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">{props.successMessage}</Toast.Body>\n      </Toast>\n      <Toast\n        className=\"border-danger text-danger bg-danger\"\n        show={props.toastError}\n        onClose={() => props.setToastError(false)}\n      >\n        <Toast.Header>\n          <img\n            src={miniLogo}\n            className=\"rounded mr-2\"\n            style={{ height: \"20px\" }}\n            alt=\"vms\"\n          />\n          <strong className=\"mr-auto text-danger\">VMS</strong>\n        </Toast.Header>\n        <Toast.Body className=\"text-white\">{props.errorMessage}</Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport PatientLogin from \"./components/Patient/PatientLogin\";\nimport PatientRegister from \"./components/Patient/PatientRegister\";\nimport PTDashboard from \"./components/Patient/PTDashboard\";\nimport Appointment from \"./components/Patient/Appointment\";\nimport GPLogin from \"./components/GP/GPLogin\";\nimport GPDashboard from \"./components/GP/GPDashboard\";\nimport GPRegister from \"./components/GP/GPRegister\";\nimport Notification from \"./components/Notification\";\n\nfunction App() {\n  const [toastSuccess, setToastSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [toastError, setToastError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    setTimeout(() => {\n      setToastSuccess(false);\n      setToastError(false);\n      setSuccessMessage(\"\");\n      setErrorMessage(\"\");\n    }, 4000);\n  }, [toastError, toastSuccess]);\n\n  return (\n    <div className=\"w-75 mt-5 mx-auto\">\n      <Notification\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        style={{\n          position: \"relative\",\n          minHeight: \"200px\",\n        }}\n        errorMessage={errorMessage}\n        successMessage={successMessage}\n        toastSuccess={toastSuccess}\n        setToastSuccess={setToastSuccess}\n        toastError={toastError}\n        setToastError={setToastError}\n      />\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route\n          path=\"/patient/register\"\n          render={(props) => (\n            <PatientRegister\n              {...props}\n              setToastSuccess={setToastSuccess}\n              setToastError={setToastError}\n              setSuccessMessage={setSuccessMessage}\n              setErrorMessage={setErrorMessage}\n            />\n          )}\n        />\n        <Route\n          path=\"/patient/dashboard\"\n          render={(props) => (\n            <PTDashboard\n              {...props}\n              setToastSuccess={setToastSuccess}\n              setToastError={setToastError}\n              setSuccessMessage={setSuccessMessage}\n              setErrorMessage={setErrorMessage}\n            />\n          )}\n        />\n        <Route\n          path=\"/patient/appointment\"\n          render={(props) => (\n            <Appointment\n              {...props}\n              setToastSuccess={setToastSuccess}\n              setToastError={setToastError}\n              setSuccessMessage={setSuccessMessage}\n              setErrorMessage={setErrorMessage}\n            />\n          )}\n        />\n        <Route\n          path=\"/gp/register\"\n          render={(props) => (\n            <GPRegister\n              {...props}\n              setToastSuccess={setToastSuccess}\n              setToastError={setToastError}\n              setSuccessMessage={setSuccessMessage}\n              setErrorMessage={setErrorMessage}\n            />\n          )}\n        />\n        <Route\n          path=\"/gp/dashboard\"\n          render={(props) => (\n            <GPDashboard\n              {...props}\n              setToastSuccess={setToastSuccess}\n              setToastError={setToastError}\n              setSuccessMessage={setSuccessMessage}\n              setErrorMessage={setErrorMessage}\n            />\n          )}\n        />\n        <Route\n          path=\"/patient\"\n          render={(props) => (\n            <PatientLogin\n              {...props}\n              setToastError={setToastError}\n              setErrorMessage={setErrorMessage}\n            />\n          )}\n        />\n        <Route\n          path=\"/gp\"\n          render={(props) => (\n            <GPLogin\n              {...props}\n              setToastError={setToastError}\n              setErrorMessage={setErrorMessage}\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}