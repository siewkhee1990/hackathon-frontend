{"version":3,"sources":["components/Constant.js","components/Testing.js","App.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL_TESTS","process","REACT_APP_BACKEND_URL_PATIENTS","REACT_APP_BACKEND_URL_GPS","REACT_APP_BACKEND_URL_APPOINTMENTS","REACT_APP_BACKEND_URL_TESTS","Testing","useState","message","setMessage","useEffect","axios","get","then","response","data","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAQaA,GAPXC,mIAAYC,+BAGZD,mIAAYE,0BAEZF,mIAAYG,mCAGZH,mIAAYI,6BAA+B,+BCL9B,SAASC,IAAW,IAAD,EACFC,mBAAS,IADP,mBACzBC,EADyB,KAChBC,EADgB,KAMhC,OAHAC,qBAAU,WACRC,IAAMC,IAAIZ,GAAmBa,MAAK,SAACC,GAAD,OAAcL,EAAWK,EAASC,WACnE,IACI,8BAAMP,ICKAQ,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,oBAEE,cAACX,EAAD,QCGSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a397ba31.chunk.js","sourcesContent":["export const BACKEND_URL_PATIENTS =\n  process.env.REACT_APP_BACKEND_URL_PATIENTS ||\n  \"http://localhost:5000/patients\";\nexport const BACKEND_URL_GPS =\n  process.env.REACT_APP_BACKEND_URL_GPS || \"http://localhost:5000/gps\";\nexport const BACKEND_URL_APPOINTMENTS =\n  process.env.REACT_APP_BACKEND_URL_APPOINTMENTS ||\n  \"http://localhost:5000/appointments\";\nexport const BACKEND_URL_TESTS =\n  process.env.REACT_APP_BACKEND_URL_TESTS || \"http://localhost:5000/tests\";\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_TESTS } from \"./Constant\";\n\nexport default function Testing() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(BACKEND_URL_TESTS).then((response) => setMessage(response.data));\n  }, []);\n  return <div>{message}</div>;\n}\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Login from \"./components/Login\";\nimport Testing from \"./components/Testing\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      vms-app\n      <Testing />\n      {/* <Login /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}