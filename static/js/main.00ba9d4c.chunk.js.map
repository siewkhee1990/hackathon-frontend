{"version":3,"sources":["components/Constant.js","components/Testing.js","components/Main.js","components/Patient/PatientLogin.js","components/Patient/PatientRegister.js","components/GP/Tabs/Appointments.js","components/Patient/PTDashboard.js","components/Patient/Appointment.js","components/GP/GPLogin.js","components/GP/Tabs/CheckingIn.js","components/GP/Tabs/Edit.js","components/GP/GPDashboard.js","components/GP/GPRegister.js","App.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL_PATIENTS","process","REACT_APP_BACKEND_URL_PATIENTS","BACKEND_URL_GPS","REACT_APP_BACKEND_URL_GPS","BACKEND_URL_APPOINTMENTS","REACT_APP_BACKEND_URL_APPOINTMENTS","BACKEND_URL_TESTS","REACT_APP_BACKEND_URL_TESTS","Testing","useState","message","setMessage","useEffect","axios","get","then","response","data","Main","to","Button","variant","className","PatientLogin","props","email","setEmail","password","setPassword","info","JSON","parse","localStorage","getItem","console","log","pid","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","event","target","onClick","preventDefault","alert","post","setItem","stringify","ptoken","history","push","submitLogin","PatientRegister","name","setName","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","NRIC","setNRIC","fetchData","required","defaultValue","minLength","pattern","length","res","catch","error","register","Appointments","Table","striped","bordered","hover","appointments","map","element","index","date","vaccineType","status","disabled","setEdit","deleteAppointment","id","PTDashboard","setAppointments","token","React","modalShow","setModalShow","Navbar","bg","Brand","href","Nav","Link","inline","FormControl","Container","fluid","Row","Col","Card","border","style","width","Header","Body","aid","gpid","Text","HealthCheckUpModal","show","onHide","Accordion","Toggle","as","eventKey","Collapse","Modal","size","aria-labelledby","centered","closeButton","Title","Check","label","sm","span","offset","Footer","Appointment","setVaccineType","setDate","gps","setGps","setGpid","onSubmit","err","createAppointment","readOnly","e","format","clinicName","GPLogin","gptoken","CheckingIn","appointment","setAppointment","setID","appointmentDate","setAppointmentDate","put","setUpdate","update","checkIn","Edit","updateAppointment","edit","newAppointmentDate","setNewAppointmentDate","GPDashboard","thisUser","setThisUser","check","Tabs","defaultActiveKey","Tab","title","address","indexOf","GPRegister","setClinicName","setAddress","adminCode","setAdminCode","App","exact","path","component","Monitor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00ba9d4c.chunk.js","sourcesContent":["export const BACKEND_URL_PATIENTS =\n  process.env.REACT_APP_BACKEND_URL_PATIENTS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/patients\";\nexport const BACKEND_URL_GPS =\n  process.env.REACT_APP_BACKEND_URL_GPS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/gps\";\nexport const BACKEND_URL_APPOINTMENTS =\n  process.env.REACT_APP_BACKEND_URL_APPOINTMENTS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/appointments\";\nexport const BACKEND_URL_TESTS =\n  process.env.REACT_APP_BACKEND_URL_TESTS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/tests\";\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_TESTS } from \"./Constant\";\n\nexport default function Testing() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(BACKEND_URL_TESTS).then((response) => setMessage(response.data));\n  }, []);\n  return <div>{message}</div>;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function Main() {\n  return (\n    <div>\n      <h1>Welcome to Vaccination Management System</h1>\n      <Link to=\"/patient\">\n        <Button variant=\"primary\" className=\"mx-2\">\n          Proceed as Patient\n        </Button>\n      </Link>\n      <Link to=\"/gp\">\n        <Button variant=\"primary\" className=\"mx-2\">\n          Proceed as GP\n        </Button>\n      </Link>\n\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_PATIENTS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PatientLogin(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    let info = JSON.parse(localStorage.getItem(\"ptoken\"));\n    console.log(info);\n    console.log(!info);\n    if (info) {\n      console.log(info.pid);\n    }\n  }, []);\n\n  const submitLogin = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      alert(\"Please key in required field!\");\n    }\n    let data = {\n      email: email,\n      password: password,\n    };\n    axios.post(`${BACKEND_URL_PATIENTS}/login`, data).then((response) => {\n      localStorage.setItem(\"ptoken\", JSON.stringify(response.data.ptoken));\n      props.history.push(\"/patient/dashboard\");\n    });\n  };\n\n  return (\n    <div>\n      <h1>Patient Portal</h1>\n      <Form className=\"m-3\">\n        <Form.Group controlId=\"login\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email address\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={(event) => submitLogin(event)}\n        >\n          Sign in\n        </Button>\n        <Link to=\"/patient/register\">\n          <Button type=\"submit\" variant=\"primary\" className=\"mx-2\">\n            Register\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_PATIENTS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nfunction PatientRegister(props) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [NRIC, setNRIC] = useState(\"\");\n\n  const fetchData = (event) => {\n    event.preventDefault();\n    if (NRIC !== \"\") {\n      axios.get(`${BACKEND_URL_PATIENTS}/fetch/${NRIC}`).then((response) => {\n        setName(response.data.name);\n        setEmail(response.data.email);\n        setPhoneNumber(response.data.phoneNumber);\n        alert(`Your information has been successfully fetched.\n        Please ensure that all the details are correct before \n        proceeding with the registration.`);\n      });\n    } else {\n      alert(\"Please enter your NRIC/FIN.\");\n    }\n  };\n\n  const register = (event) => {\n    event.preventDefault();\n    if (name === \"\" || email === \"\" || password.length !== 8) {\n      alert(\"Please fill in required fields correctly!\");\n    } else if (password === confirmPassword) {\n      axios\n        .post(`${BACKEND_URL_PATIENTS}/create`, {\n          name: name,\n          email: email,\n          password: password,\n          phoneNumber: phoneNumber,\n        })\n        .then((res) => {\n          console.log(res.data);\n          alert(\"Registeration successful\");\n          props.history.push(\"/patient\");\n        })\n        .catch((error) => {\n          console.log(error.response);\n        });\n    } else {\n      alert(\"Confirm password and password not matched!\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Patient Register</h1>\n      <Form>\n        <Form.Group controlId=\"nric\">\n          <Form.Label>Key in NRIC / FIN</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type in NRIC / FIN to fill in data.\"\n            value={NRIC}\n            onChange={(event) => setNRIC(event.target.value)}\n          />\n          <Button onClick={(event) => fetchData(event)}>fetch info</Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"name\"\n            required\n            defaultValue={name}\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"email\"\n            required\n            defaultValue={email}\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password(8 characters)\"\n            required\n            minLength=\"8\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"confirm password\"\n            required\n            minLength=\"8\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"phonenumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"phone\"\n            placeholder=\"phone number\"\n            pattern=\"^[8-9][0-9]{7}$\"\n            required\n            defaultValue={phoneNumber}\n            value={phoneNumber}\n            onChange={(event) => setPhoneNumber(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={(event) => register(event)}\n        >\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default PatientRegister;\n","import React from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\n\nexport default function Appointments(props) {\n  return (\n    <>\n      <Table striped bordered hover variant=\"outlined-light\">\n        <thead>\n          <tr>\n            <th>S/N</th>\n            <th>Patient Name</th>\n            <th>Appointment Date</th>\n            <th>Vaccive Type</th>\n            <th>Status</th>\n            <th>Next Appointment</th>\n            <th>Edit Appt.</th>\n            <th>Delete Appt.</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.appointments &&\n            props.appointments.map((element, index) => {\n              return (\n                <tr key={index + 1}>\n                  <td>{index + 1}</td>\n                  <td>{element.name}</td>\n                  <td>{element.date}</td>\n                  <td>{element.vaccineType}</td>\n                  <td>{element.status}</td>\n                  <td>\n                    {element.status === \"completed\" && (\n                      <Button\n                        variant=\"outline-success\"\n                        disabled={element.status !== \"completed\"}\n                      >\n                        Schedule\n                      </Button>\n                    )}\n                    {element.status !== \"completed\" && (\n                      <Button\n                        variant=\"outline-secondary\"\n                        disabled={element.status !== \"completed\"}\n                      >\n                        Schedule\n                      </Button>\n                    )}\n                  </td>\n                  <td>\n                    {element.status === \"pending\" && (\n                      <Button\n                        variant=\"outline-warning\"\n                        onClick={() => props.setEdit(element)}\n                        disabled={element.status === \"completed\"}\n                      >\n                        Edit\n                      </Button>\n                    )}\n                    {element.status !== \"pending\" && (\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => props.setEdit(element)}\n                        disabled={element.status === \"completed\"}\n                      >\n                        Edit\n                      </Button>\n                    )}\n                  </td>\n                  <td>\n                    {element.status !== \"pending\" && (\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() =>\n                          props.deleteAppointment(element.id, element)\n                        }\n                        disabled={element.status === \"completed\"}\n                      >\n                        Delete\n                      </Button>\n                    )}\n                    {element.status === \"pending\" && (\n                      <Button\n                        variant=\"outline-danger\"\n                        onClick={() =>\n                          props.deleteAppointment(element.id, element)\n                        }\n                        disabled={element.status === \"completed\"}\n                      >\n                        Delete\n                      </Button>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Table,\n  Nav,\n  Modal,\n  Navbar,\n  FormControl,\n  Container,\n  Row,\n  Col,\n  Accordion,\n  Card,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Appointments from \"../GP/Tabs/Appointments\";\nimport { BACKEND_URL_APPOINTMENTS } from \"../Constant\";\n\nexport default function PTDashboard(props) {\n  // const [thisUser, setThisUser] = useState(true);\n  // const [patients, setPatients] = useState([]);\n  // const [edit, setEdit] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n\n  useEffect(() => {\n    let token = JSON.parse(localStorage.getItem(\"ptoken\"));\n    if (!token) {\n      alert(\"Please login to use the system!\");\n      props.history.push(\"/patient\");\n    } else {\n      axios\n        .get(`${BACKEND_URL_APPOINTMENTS}/pid/${token.pid}`)\n        .then((response) => {\n          console.log(response);\n          setAppointments(response.data);\n        });\n    }\n  }, []);\n\n  const deleteAppointment = (id, info) => {\n    console.log(id);\n    console.log(info);\n  };\n\n  const checkIn = (event) => {\n    event.preventDefault();\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"ptoken\");\n    props.history.push(\"/patient\");\n  };\n\n  const [modalShow, setModalShow] = React.useState(false);\n\n  //Patient Dashboard\n  return (\n    <div className=\"App mt-5\">\n      {/* Navigation Bar */}\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">My Profile</Navbar.Brand>\n\n        <Nav className=\"mr-auto\">\n          <Link to=\"/patient/appointment\">\n            <Nav.Link href=\"#myAppointments\">My Appointments</Nav.Link>\n          </Link>\n          <Link to=\"\">\n            <Nav.Link href=\"#logout\">logout</Nav.Link>\n          </Link>\n        </Nav>\n\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-light\">Search</Button>\n        </Form>\n      </Navbar>\n\n      {/* Creating continers for the contents */}\n\n      <Container fluid>\n        {/* 1st row */}\n        <Row className=\"m-3\">\n          <Col>\n            <Card border=\"success\" style={{ width: \"Auto\" }}>\n              <Card.Header>Upcoming Appointments</Card.Header>\n              <Card.Body>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Date</th>\n                      <th>Vacine Type</th>\n                      <th>GP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {appointments.map((element) => {\n                      return (\n                        <tr key={element.aid} id={element.aid}>\n                          <td>{element.aid}</td>\n\n                          <td>{element.date}</td>\n\n                          <td>{element.vaccineType}</td>\n\n                          <td>{element.gpid}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* 2nd row - Health checkup */}\n        <Row className=\"m-3\">\n          <Col>\n            <Card border=\"warning\" style={{ width: \"Auto\" }}>\n              <Card.Header>Health Checkup!</Card.Header>\n\n              <Card.Body>\n                <Card.Text>Update your daily progress!</Card.Text>\n\n                <Button variant=\"warning\" onClick={() => setModalShow(true)}>\n                  Start\n                </Button>\n\n                <HealthCheckUpModal\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card border=\"danger\" style={{ width: \"Auto\" }}>\n              <Card.Header>Emergency Hotlines!</Card.Header>\n\n              <Card.Body>\n                <Card.Text>Reach out to an officer!</Card.Text>\n                <Button variant=\"danger\">Call</Button>{\" \"}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* 3rd Row */}\n        <Row className=\"m-3\">\n          <Col>\n            <Card border=\"info\" style={{ width: \"Auto\" }}>\n              <Card.Header>Useful Information</Card.Header>\n              <Card.Body className=\"m-2\">\n                <Accordion className=\"m-1\">\n                  <Card>\n                    <Card.Header>\n                      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        Vaccination side effects!\n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                      <Card.Body>\n                        <li>Vommitting</li>\n                        <li>Nausea</li>\n                        <li>Pain</li>\n                        <li>Breathlessness</li>\n                        <li>Panic</li>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                </Accordion>\n\n                {/* <Accordion className=\"m-1\">\n                                    <Card>\n\n                                        <Card.Header>\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                                Good hygeine practices!\n                                            </Accordion.Toggle>\n                                        </Card.Header>\n                                        <Accordion.Collapse eventKey=\"0\">\n                                            <Card.Body>\n                                                <li>Vommitting</li>\n                                                <li>Nausea</li>\n                                                <li>Pain</li>\n                                                <li>Breathlessness</li>\n                                                <li>Panic</li>\n                                            </Card.Body>\n                                        </Accordion.Collapse>\n                                    </Card>\n\n                                </Accordion> */}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n//Helth Checkup Modal!\nfunction HealthCheckUpModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Vaccination Monitoring Procedure\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Please provide the required information!</p>\n\n        {/* Health Checup Form    */}\n        <Form>\n          <fieldset>\n            {/* Pain */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>\n                    Are you experiencing pain anywhere in your body?\n                  </Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Fever */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Are you having headaches/fever/chills?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Bearable\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Extreme\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Rashes?                 */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>\n                    Are there any Signs of redness or rashes on your skin?\n                  </Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Exhausted         */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Are you feeling tired or exhausted?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"A little\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Exhausted\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Nausea?         */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text> Any feeling of sickness or nausea?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"A little\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"I need assistance!\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Sudden loss or gain of weight?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n          </fieldset>\n\n          <Form.Group as={Row}>\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\" onClick={props.onHide}>\n                Submit\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { BACKEND_URL_APPOINTMENTS, BACKEND_URL_GPS } from \"../Constant\";\n\nexport default function Appointment(props) {\n  const [vaccineType, setVaccineType] = useState(\"Covid-19\");\n  const [date, setDate] = useState(\"\");\n  const [gps, setGps] = useState([]);\n  const [gpid, setGpid] = useState(\"\");\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"ptoken\");\n    if (!token) {\n      alert(\"Please login to make an appointment!\");\n      props.history.push(\"/patient\");\n    } else {\n      axios.get(`${BACKEND_URL_GPS}`).then((response) => {\n        setGps(response.data);\n      });\n    }\n  }, []);\n\n  const createAppointment = (event) => {\n    event.preventDefault();\n    if (!date || !vaccineType || !gpid) {\n      alert(\"Please fill in required field!\");\n    } else {\n      let info = JSON.parse(localStorage.getItem(\"ptoken\"));\n      let data = {\n        pid: info.pid,\n        vaccineType: vaccineType,\n        date: date,\n        gpid: gpid,\n      };\n      axios\n        .post(`${BACKEND_URL_APPOINTMENTS}/create`, data)\n        .then((response) => {\n          console.log(response);\n          alert(response.data.message);\n          props.history.push(\"/patient/dashboard\");\n        })\n        .catch((err) => {\n          console.log(err.response);\n          alert(err.response.data.message);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Book New Appointment</h2>\n        <Form onSubmit={(event) => createAppointment(event)} className=\"m-3\">\n          <Form.Group controlId=\"vaccination\">\n            <Form.Label>Vaccination Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={vaccineType}\n              readOnly\n              onChange={(e) => setVaccineType(e.target.value)}\n            >\n              <option>Covid-19</option>\n              <option>Influenza</option>\n              <option>Hepatitis</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"date\">\n            <Form.Label>Appointment Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              placeholder=\"Select date...\"\n              format=\"YYYY-Mmm-DD\"\n              value={date}\n              onChange={(event) => setDate(event.target.value)}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"generalpractitioner\">\n            <Form.Label>GP</Form.Label>\n            <Form.Control\n              as=\"select\"\n              defaultValue=\"Choose...\"\n              value={gpid}\n              onChange={(e) => setGpid(e.target.value)}\n            >\n              <option>Choose...</option>\n              {gps.map((element) => {\n                return (\n                  <option key={element.gpid} value={element.gpid}>\n                    {element.clinicName}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_GPS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function GPLogin(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitLogin = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      alert(\"Please key in required field!\");\n    }\n    let data = {\n      email: email,\n      password: password,\n    };\n    axios\n      .post(`${BACKEND_URL_GPS}/login`, data)\n      .then((response) => {\n        localStorage.setItem(\"gptoken\", JSON.stringify(response.data.gptoken));\n        props.history.push(\"/gp/dashboard\");\n      })\n      .catch((err) => alert(err));\n  };\n\n  return (\n    <div>\n      <h1>GP Portal</h1>\n      <Form className=\"m-3\">\n        <Form.Group controlId=\"login\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email address\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={(event) => submitLogin(event)}\n        >\n          Sign in\n        </Button>\n        <Link to=\"gp/register\">\n          <Button variant=\"primary\" className=\"mx-2\">\n            Register\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BACKEND_URL_APPOINTMENTS, BACKEND_URL_PATIENTS } from \"../../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default function CheckingIn(props) {\n  const [appointment, setAppointment] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\n  const [NRIC, setNRIC] = useState(\"\");\n\n  useEffect(() => {\n    setID(appointment.aid);\n    setName(appointment.name);\n    setAppointmentDate(appointment.date);\n  }, [appointment]);\n\n  const checkIn = (event) => {\n    event.preventDefault();\n    if (!id || !name || !appointmentDate) {\n      alert(\"Please enter required field!\");\n    } else {\n      axios\n        .put(`${BACKEND_URL_APPOINTMENTS}/${id}/status/completed`)\n        .then((response) => {\n          console.log(response);\n          props.setUpdate(!props.update);\n        });\n    }\n  };\n\n  const fetchData = (event) => {\n    event.preventDefault();\n    if (!NRIC) {\n      alert(\"Please enter NRIC to use this feature!\");\n    } else {\n      axios.get(`${BACKEND_URL_PATIENTS}/fetch/${NRIC}`).then((response) => {\n        console.log(response);\n        let data = { email: NRIC + response.data.email };\n        axios\n          .post(`${BACKEND_URL_APPOINTMENTS}/email`, data)\n          .then((response) => {\n            console.log(response);\n            setAppointment(response.data[0]);\n          })\n          .catch((err) => {\n            console.log(err.response);\n            if (err.response.status === 404) {\n              alert(err.response.data.message);\n            }\n          });\n      });\n    }\n  };\n  return (\n    <>\n      <Form onSubmit={(event) => checkIn(event)} className=\"m-3\">\n        <p>\n          <h2>Key in</h2>\n        </p>\n        <Form.Group controlId=\"nric\">\n          <Form.Label>NRIC / FIN</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type in NRIC / FIN to fill in data.\"\n            value={NRIC}\n            onChange={(event) => setNRIC(event.target.value)}\n          />\n          <Button\n            className=\"my-3\"\n            variant=\"outline-primary\"\n            onClick={(event) => fetchData(event)}\n          >\n            fetch info\n          </Button>\n        </Form.Group>\n        <p>\n          <h2>-------------------- Or --------------------</h2>\n        </p>\n        <Form.Group controlId=\"id\">\n          <Form.Label>Appointment ID</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter appointment ID\"\n            value={id}\n            required\n            onChange={(event) => setID(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"patientname\">\n          <Form.Label>Patient's Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter patient's name\"\n            value={name}\n            required\n            onChange={(event) => setName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"vaccinetype\">\n          <Form.Label>Vaccination Type</Form.Label>\n          <Form.Control type=\"text\" value=\"Covid-19\" readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"date\">\n          <Form.Label>Appointment Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            placeholder=\"Enter date of appointment\"\n            value={appointmentDate}\n            required\n            onChange={(event) => setAppointmentDate(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          variant=\"outline-primary\"\n          type=\"submit\"\n          className=\"m-5\"\n          disabled={!id || !name || !appointmentDate ? true : false}\n        >\n          Check-In\n        </Button>\n\n        {/* <Button variant=\"outline-primary\" type=\"submit\" className=\"m-5\">\n              Scan QR Code\n            </Button> */}\n      </Form>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default function Edit(props) {\n  return (\n    <>\n      <Form\n        className=\"m-3\"\n        onSubmit={(event) => {\n          props.updateAppointment(event, props.edit.aid);\n        }}\n      >\n        <Form.Group controlId=\"patientname\">\n          <Form.Label>Patient's Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter patient's name\"\n            value={props.edit.name}\n            readOnly\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"vaccinetype\">\n          <Form.Label>Vaccination Type</Form.Label>\n          <Form.Control type=\"text\" value=\"Covid-19\" readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"oridate\">\n          <Form.Label>Original Appointment Date</Form.Label>\n          <Form.Control type=\"date\" value={props.edit.date} readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"newdate\">\n          <Form.Label>New Appointment Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            placeholder=\"Enter date of appointment\"\n            value={props.newAppointmentDate}\n            onChange={(event) =>\n              props.setNewAppointmentDate(event.target.value)\n            }\n          />\n        </Form.Group>\n\n        <Button variant=\"outline-primary\" type=\"submit\" className=\"m-5\">\n          Update\n        </Button>\n\n        <Button\n          variant=\"outline-danger\"\n          type=\"button\"\n          className=\"m-5\"\n          onClick={() => props.setEdit(null)}\n        >\n          Cancel\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BACKEND_URL_APPOINTMENTS } from \"../Constant\";\nimport { Button, Tabs, Tab } from \"react-bootstrap\";\nimport CheckingIn from \"./Tabs/CheckingIn\";\nimport Appointments from \"./Tabs/Appointments\";\nimport Edit from \"./Tabs/Edit\";\n\nexport default function GPDashboard(props) {\n  const [appointments, setAppointments] = useState([]);\n  const [thisUser, setThisUser] = useState(null);\n  const [newAppointmentDate, setNewAppointmentDate] = useState(\"\");\n  // const [patients, setPatients] = useState([]);\n  const [edit, setEdit] = useState(null);\n  const [update, setUpdate] = useState(false);\n\n  useEffect(() => {\n    let info = JSON.parse(localStorage.getItem(\"gptoken\"));\n    if (!info) {\n      alert(\"Please login to use this page!\");\n      props.history.push(\"/gp\");\n    } else {\n      setThisUser(info);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (thisUser) {\n      axios\n        .get(`${BACKEND_URL_APPOINTMENTS}/gpid/${thisUser.gpid}`)\n        .then((response) => {\n          console.log(response);\n          setAppointments(response.data);\n        });\n    }\n  }, [thisUser, update]);\n\n  const deleteAppointment = (id, info) => {\n    console.log(id);\n    console.log(info);\n  };\n\n  const check = (event) => {\n    event.preventDefault();\n    console.log(thisUser);\n  };\n\n  const updateAppointment = (event, id) => {\n    event.preventDefault();\n    if (!newAppointmentDate) {\n      alert(\"Pleasee enter a date!\");\n    } else {\n      let data = {\n        date: newAppointmentDate,\n      };\n      axios\n        .put(`${BACKEND_URL_APPOINTMENTS}/id/${id}/changeDate`, data)\n        .then((response) => {\n          alert(response.data.message);\n          setEdit(null);\n          setUpdate(!update);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"gptoken\");\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"App mt-5\">\n      <h2>GP Dashboard</h2>\n      <Button\n        variant=\"outline-danger\"\n        onClick={(event) => {\n          check(event);\n        }}\n      >\n        Check\n      </Button>\n      <Tabs defaultActiveKey=\"appointments\" id=\"uncontrolled-tab-example\">\n        {thisUser && (\n          <Tab eventKey=\"gpinfo\" title=\"GP Info\">\n            <h1 className=\"m-5\">My Clinic's Info</h1>\n            <div className=\"mx-5 text-left\">\n              <p>\n                <h2>Name: {thisUser.clinicName}</h2>\n              </p>\n              <p>\n                <h4>Address: {thisUser.address}</h4>\n              </p>\n              <p>\n                <h4>E-mail: {thisUser.email}</h4>\n              </p>\n            </div>\n          </Tab>\n        )}\n\n        <Tab eventKey=\"appointments\" title=\"Appointments\">\n          <h1 className=\"m-5\">Appointments</h1>\n          <div className=\"mx-5\">\n            <Appointments\n              appointments={appointments}\n              setEdit={setEdit}\n              deleteAppointment={deleteAppointment}\n            />\n          </div>\n        </Tab>\n\n        <Tab eventKey=\"checkin\" title=\"Check Patient In\">\n          <CheckingIn update={update} setUpdate={setUpdate} />\n        </Tab>\n\n        {edit && thisUser && (\n          <Tab\n            eventKey=\"edit\"\n            title={\n              \"Edit Appointment: S/N \" +\n              (appointments\n                .map(function (e) {\n                  return e.aid;\n                })\n                .indexOf(edit.aid) +\n                1)\n            }\n          >\n            <Edit\n              edit={edit}\n              newAppointmentDate={newAppointmentDate}\n              setNewAppointmentDate={setNewAppointmentDate}\n              setEdit={setEdit}\n              updateAppointment={updateAppointment}\n            />\n          </Tab>\n        )}\n        {/* Appointments */}\n        {/* user scan in */}\n        {/* Scan Appointment check-in */}\n      </Tabs>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_GPS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nfunction GPRegister(props) {\n  const [clinicName, setClinicName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [adminCode, setAdminCode] = useState(\"\");\n\n  const register = (event) => {\n    event.preventDefault();\n    if (\n      !clinicName ||\n      !address ||\n      !email ||\n      !password ||\n      !confirmPassword ||\n      !adminCode\n    ) {\n      alert(\"Please fill in required field!\");\n    } else if (password === confirmPassword) {\n      axios\n        .post(`${BACKEND_URL_GPS}/create`, {\n          clinicName: clinicName,\n          address: address,\n          email: email,\n          password: password,\n          adminCode: adminCode,\n        })\n        .then((res) => {\n          alert(res.data.message);\n          props.history.push(\"/gp\");\n        })\n        .catch((error) => {\n          alert(error.response.data.message);\n        });\n    } else {\n      alert(\"Confirm password and password not matched!\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>GP Register</h1>\n      <Form onSubmit={(event) => register(event)} className=\"m-3\">\n        <Form.Group controlId=\"clinicname\">\n          <Form.Label>Clinic Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Clinic's name\"\n            required\n            value={clinicName}\n            onChange={(event) => setClinicName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"address\"\n            placeholder=\"last name\"\n            required\n            value={address}\n            onChange={(event) => setAddress(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"email\"\n            required\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password(8 characters)\"\n            required\n            minLength=\"8\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmpassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"confirm password\"\n            required\n            minLength=\"8\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"admincode\">\n          <Form.Label>Admin Code</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Admin code\"\n            required\n            value={adminCode}\n            onChange={(event) => setAdminCode(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default GPRegister;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Testing from \"./components/Testing\";\nimport Main from \"./components/Main\";\nimport PatientLogin from \"./components/Patient/PatientLogin\";\nimport PatientRegister from \"./components/Patient/PatientRegister\";\nimport PTDashboard from \"./components/Patient/PTDashboard\";\nimport Appointment from \"./components/Patient/Appointment\";\nimport Monitor from \"./components/Patient/Monitor\";\nimport GPLogin from \"./components/GP/GPLogin\";\nimport GPDashboard from \"./components/GP/GPDashboard\";\nimport GPRegister from \"./components/GP/GPRegister\";\n\nfunction App() {\n  return (\n    <div className=\"w-75 mt-5 mx-auto\">\n      <Testing />\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/patient/register\" component={PatientRegister} />\n        <Route path=\"/patient/dashboard\" component={PTDashboard} />\n        <Route path=\"/patient/appointment\" component={Appointment} />\n        <Route path=\"/patient/monitor\" component={Monitor} />\n        <Route path=\"/gp/register\" component={GPRegister} />\n        <Route path=\"/gp/dashboard\" component={GPDashboard} />\n        <Route path=\"/patient\" component={PatientLogin} />\n        <Route path=\"/gp\" component={GPLogin} />\n        {/* <Testing /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}