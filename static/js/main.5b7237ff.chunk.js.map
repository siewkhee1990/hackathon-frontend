{"version":3,"sources":["components/Constant.js","components/Testing.js","components/Main.js","components/Patient/PatientLogin.js","components/Patient/PatientRegister.js","components/GP/Tabs/Appointments.js","components/Patient/PTDashboard.js","components/Patient/Appointment.js","components/GP/GPLogin.js","components/GP/Tabs/CheckingIn.js","components/GP/Tabs/Edit.js","components/GP/GPDashboard.js","components/GP/GPRegister.js","App.js","reportWebVitals.js","index.js"],"names":["BACKEND_URL_PATIENTS","process","REACT_APP_BACKEND_URL_PATIENTS","BACKEND_URL_GPS","REACT_APP_BACKEND_URL_GPS","BACKEND_URL_APPOINTMENTS","REACT_APP_BACKEND_URL_APPOINTMENTS","BACKEND_URL_TESTS","REACT_APP_BACKEND_URL_TESTS","Testing","useState","message","setMessage","useEffect","axios","get","then","response","data","Main","to","Button","variant","className","PatientLogin","props","email","setEmail","password","setPassword","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","event","target","onClick","preventDefault","alert","post","localStorage","setItem","JSON","stringify","ptoken","history","push","catch","err","console","log","submitLogin","PatientRegister","name","setName","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","NRIC","setNRIC","error","fetchData","required","defaultValue","minLength","pattern","length","res","register","Appointments","Table","striped","bordered","hover","appointments","map","element","index","aid","date","vaccineType","status","disabled","setEdit","deleteAppointment","id","PTDashboard","setAppointments","token","parse","getItem","pid","React","modalShow","setModalShow","Navbar","bg","Brand","href","Nav","Link","inline","FormControl","Container","fluid","Row","Col","Card","border","style","width","Header","Body","gpid","Text","HealthCheckUpModal","show","onHide","Accordion","Toggle","as","eventKey","Collapse","Modal","size","aria-labelledby","centered","closeButton","Title","Check","label","sm","span","offset","Footer","Appointment","setVaccineType","setDate","gps","setGps","setGpid","onSubmit","info","createAppointment","readOnly","e","format","clinicName","GPLogin","gptoken","CheckingIn","appointment","setAppointment","setID","appointmentDate","setAppointmentDate","put","toggleUpdate","checkIn","Edit","updateAppointment","edit","newAppointmentDate","setNewAppointmentDate","GPDashboard","thisUser","setThisUser","update","setUpdate","check","Tabs","defaultActiveKey","Tab","title","address","indexOf","GPRegister","setClinicName","setAddress","adminCode","setAdminCode","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b7237ff.chunk.js","sourcesContent":["export const BACKEND_URL_PATIENTS =\n  process.env.REACT_APP_BACKEND_URL_PATIENTS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/patients\";\nexport const BACKEND_URL_GPS =\n  process.env.REACT_APP_BACKEND_URL_GPS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/gps\";\nexport const BACKEND_URL_APPOINTMENTS =\n  process.env.REACT_APP_BACKEND_URL_APPOINTMENTS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/appointments\";\nexport const BACKEND_URL_TESTS =\n  process.env.REACT_APP_BACKEND_URL_TESTS ||\n  \"http://team2-alb-2087658319.ap-southeast-1.elb.amazonaws.com/tests\";\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_TESTS } from \"./Constant\";\n\nexport default function Testing() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(BACKEND_URL_TESTS).then((response) => setMessage(response.data));\n  }, []);\n  return <div>{message}</div>;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function Main() {\n  return (\n    <div>\n      <h1>Welcome to Vaccination Management System</h1>\n      <Link to=\"/patient\">\n        <Button variant=\"primary\" className=\"mx-2\">\n          Proceed as Patient\n        </Button>\n      </Link>\n      <Link to=\"/gp\">\n        <Button variant=\"primary\" className=\"mx-2\">\n          Proceed as GP\n        </Button>\n      </Link>\n\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_PATIENTS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function PatientLogin(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitLogin = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      alert(\"Please key in required field!\");\n    }\n    let data = {\n      email: email,\n      password: password,\n    };\n    axios\n      .post(`${BACKEND_URL_PATIENTS}/login`, data)\n      .then((response) => {\n        localStorage.setItem(\"ptoken\", JSON.stringify(response.data.ptoken));\n        props.history.push(\"/patient/dashboard\");\n      })\n      .catch((err) => {\n        if (!err.response) {\n          console.log(err);\n        } else if (!err.response.data) {\n          console.log(err.response);\n        } else {\n          alert(err.response.data.message);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <h1>Patient Portal</h1>\n      <Form className=\"m-3\">\n        <Form.Group controlId=\"login\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email address\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={(event) => submitLogin(event)}\n        >\n          Sign in\n        </Button>\n        <Link to=\"/patient/register\">\n          <Button type=\"submit\" variant=\"primary\" className=\"mx-2\">\n            Register\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_PATIENTS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nfunction PatientRegister(props) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [NRIC, setNRIC] = useState(\"\");\n\n  const fetchData = (event) => {\n    event.preventDefault();\n    if (NRIC !== \"\") {\n      axios\n        .get(`${BACKEND_URL_PATIENTS}/fetch/${NRIC}`)\n        .then((response) => {\n          setName(response.data.name);\n          setEmail(response.data.email);\n          setPhoneNumber(response.data.phoneNumber);\n          alert(`Your information has been successfully fetched.\n        Please ensure that all the details are correct before \n        proceeding with the registration.`);\n        })\n        .catch((error) => {\n          if (!error.response) {\n            console.log(error);\n          } else if (!error.response.data) {\n            console.log(error.response);\n          } else {\n            alert(error.response.data.message);\n          }\n        });\n    } else {\n      alert(\"Please enter your NRIC/FIN.\");\n    }\n  };\n\n  const register = (event) => {\n    event.preventDefault();\n    if (!name || !email || !password) {\n      alert(\"Please fill in required fields!\");\n    } else if (password.length < 8) {\n      alert(\"Please enter at least 8 characters in password field!\");\n    } else if (password !== confirmPassword) {\n      alert(\"Confirm password not match!\");\n    } else {\n      axios\n        .post(`${BACKEND_URL_PATIENTS}/create`, {\n          name: name,\n          email: email,\n          password: password,\n          phoneNumber: phoneNumber,\n        })\n        .then((res) => {\n          console.log(res.data);\n          alert(\"Registeration successful\");\n          props.history.push(\"/patient\");\n        })\n        .catch((error) => {\n          if (!error.response) {\n            console.log(error);\n          } else if (!error.response.data) {\n            console.log(error.response);\n          } else {\n            alert(error.response.data.message);\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Patient Register</h1>\n      <Form>\n        <Form.Group controlId=\"nric\">\n          <Form.Label>Key in NRIC / FIN</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type in NRIC / FIN to fill in data.\"\n            value={NRIC}\n            onChange={(event) => setNRIC(event.target.value)}\n          />\n          <Button onClick={(event) => fetchData(event)}>fetch info</Button>\n        </Form.Group>\n\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"name\"\n            required\n            defaultValue={name}\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"email\"\n            required\n            defaultValue={email}\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password(8 characters)\"\n            required\n            minLength=\"8\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"confirm password\"\n            required\n            minLength=\"8\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"phonenumber\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control\n            type=\"phone\"\n            placeholder=\"phone number\"\n            pattern=\"^[8-9][0-9]{7}$\"\n            required\n            defaultValue={phoneNumber}\n            value={phoneNumber}\n            onChange={(event) => setPhoneNumber(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          onClick={(event) => register(event)}\n        >\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default PatientRegister;\n","import React from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\n\nexport default function Appointments(props) {\n  return (\n    <>\n      <Table striped bordered hover variant=\"outlined-light\">\n        <thead>\n          <tr>\n            <th>S/N</th>\n            <th>Appt. ID</th>\n            <th>Patient Name</th>\n            <th>Appointment Date</th>\n            <th>Vaccive Type</th>\n            <th>Status</th>\n            <th>Next Appointment</th>\n            <th>Edit Appt.</th>\n            <th>Delete Appt.</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.appointments &&\n            props.appointments.map((element, index) => {\n              return (\n                <tr key={index + 1}>\n                  <td>{index + 1}</td>\n                  <td>{element.aid}</td>\n                  <td>{element.name}</td>\n                  <td>{element.date}</td>\n                  <td>{element.vaccineType}</td>\n                  <td>{element.status}</td>\n                  <td>\n                    {element.status === \"completed\" && (\n                      <Button\n                        variant=\"outline-success\"\n                        disabled={element.status !== \"completed\"}\n                      >\n                        Schedule\n                      </Button>\n                    )}\n                    {element.status !== \"completed\" && (\n                      <Button\n                        variant=\"outline-secondary\"\n                        disabled={element.status !== \"completed\"}\n                      >\n                        Schedule\n                      </Button>\n                    )}\n                  </td>\n                  <td>\n                    {element.status === \"pending\" && (\n                      <Button\n                        variant=\"outline-warning\"\n                        onClick={() => props.setEdit(element)}\n                        disabled={element.status === \"completed\"}\n                      >\n                        Edit\n                      </Button>\n                    )}\n                    {element.status !== \"pending\" && (\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() => props.setEdit(element)}\n                        disabled={element.status === \"completed\"}\n                      >\n                        Edit\n                      </Button>\n                    )}\n                  </td>\n                  <td>\n                    {element.status !== \"pending\" && (\n                      <Button\n                        variant=\"outline-secondary\"\n                        onClick={() =>\n                          props.deleteAppointment(element.id, element)\n                        }\n                        disabled={element.status === \"completed\"}\n                      >\n                        Delete\n                      </Button>\n                    )}\n                    {element.status === \"pending\" && (\n                      <Button\n                        variant=\"outline-danger\"\n                        onClick={() =>\n                          props.deleteAppointment(element.id, element)\n                        }\n                        disabled={element.status === \"completed\"}\n                      >\n                        Delete\n                      </Button>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Table,\n  Nav,\n  Modal,\n  Navbar,\n  FormControl,\n  Container,\n  Row,\n  Col,\n  Accordion,\n  Card,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Appointments from \"../GP/Tabs/Appointments\";\nimport { BACKEND_URL_APPOINTMENTS } from \"../Constant\";\n\nexport default function PTDashboard(props) {\n  // const [thisUser, setThisUser] = useState(true);\n  // const [patients, setPatients] = useState([]);\n  // const [edit, setEdit] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n\n  useEffect(() => {\n    let token = JSON.parse(localStorage.getItem(\"ptoken\"));\n    if (!token) {\n      alert(\"Please login to use the system!\");\n      props.history.push(\"/patient\");\n    } else {\n      axios\n        .get(`${BACKEND_URL_APPOINTMENTS}/pid/${token.pid}`)\n        .then((response) => {\n          console.log(response);\n          setAppointments(response.data);\n        })\n        .catch((error) => {\n          if (!error.response) {\n            console.log(error);\n          } else if (!error.response.data) {\n            console.log(error.response);\n          } else {\n            alert(error.response.data.message);\n          }\n        });\n    }\n  }, []);\n\n  const deleteAppointment = (id, info) => {\n    console.log(id);\n    console.log(info);\n  };\n\n  const checkIn = (event) => {\n    event.preventDefault();\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"ptoken\");\n    props.history.push(\"/patient\");\n  };\n\n  const [modalShow, setModalShow] = React.useState(false);\n\n  //Patient Dashboard\n  return (\n    <div className=\"App mt-5\">\n      {/* Navigation Bar */}\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">My Profile</Navbar.Brand>\n\n        <Nav className=\"mr-auto\">\n          <Link to=\"/patient/appointment\">\n            <Nav.Link href=\"#myAppointments\">My Appointments</Nav.Link>\n          </Link>\n          <Link to=\"\">\n            <Nav.Link href=\"#logout\">logout</Nav.Link>\n          </Link>\n        </Nav>\n\n        <Form inline>\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-light\">Search</Button>\n        </Form>\n      </Navbar>\n\n      {/* Creating continers for the contents */}\n\n      <Container fluid>\n        {/* 1st row */}\n        <Row className=\"m-3\">\n          <Col>\n            <Card border=\"success\" style={{ width: \"Auto\" }}>\n              <Card.Header>Upcoming Appointments</Card.Header>\n              <Card.Body>\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Date</th>\n                      <th>Vacine Type</th>\n                      <th>GP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {appointments.map((element) => {\n                      return (\n                        <tr key={element.aid} id={element.aid}>\n                          <td>{element.aid}</td>\n\n                          <td>{element.date}</td>\n\n                          <td>{element.vaccineType}</td>\n\n                          <td>{element.gpid}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* 2nd row - Health checkup */}\n        <Row className=\"m-3\">\n          <Col>\n            <Card border=\"warning\" style={{ width: \"Auto\" }}>\n              <Card.Header>Health Checkup!</Card.Header>\n\n              <Card.Body>\n                <Card.Text>Update your daily progress!</Card.Text>\n\n                <Button variant=\"warning\" onClick={() => setModalShow(true)}>\n                  Start\n                </Button>\n\n                <HealthCheckUpModal\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n\n          <Col>\n            <Card border=\"danger\" style={{ width: \"Auto\" }}>\n              <Card.Header>Emergency Hotlines!</Card.Header>\n\n              <Card.Body>\n                <Card.Text>Reach out to an officer!</Card.Text>\n                <Button variant=\"danger\">Call</Button>{\" \"}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* 3rd Row */}\n        <Row className=\"m-3\">\n          <Col>\n            <Card border=\"info\" style={{ width: \"Auto\" }}>\n              <Card.Header>Useful Information</Card.Header>\n              <Card.Body className=\"m-2\">\n                <Accordion className=\"m-1\">\n                  <Card>\n                    <Card.Header>\n                      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        Vaccination side effects!\n                      </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                      <Card.Body>\n                        <li>Vommitting</li>\n                        <li>Nausea</li>\n                        <li>Pain</li>\n                        <li>Breathlessness</li>\n                        <li>Panic</li>\n                      </Card.Body>\n                    </Accordion.Collapse>\n                  </Card>\n                </Accordion>\n\n                {/* <Accordion className=\"m-1\">\n                                    <Card>\n\n                                        <Card.Header>\n                                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                                Good hygeine practices!\n                                            </Accordion.Toggle>\n                                        </Card.Header>\n                                        <Accordion.Collapse eventKey=\"0\">\n                                            <Card.Body>\n                                                <li>Vommitting</li>\n                                                <li>Nausea</li>\n                                                <li>Pain</li>\n                                                <li>Breathlessness</li>\n                                                <li>Panic</li>\n                                            </Card.Body>\n                                        </Accordion.Collapse>\n                                    </Card>\n\n                                </Accordion> */}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n//Helth Checkup Modal!\nfunction HealthCheckUpModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Vaccination Monitoring Procedure\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Please provide the required information!</p>\n\n        {/* Health Checup Form    */}\n        <Form>\n          <fieldset>\n            {/* Pain */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>\n                    Are you experiencing pain anywhere in your body?\n                  </Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Fever */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Are you having headaches/fever/chills?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Bearable\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Extreme\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Rashes?                 */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>\n                    Are there any Signs of redness or rashes on your skin?\n                  </Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Exhausted         */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Are you feeling tired or exhausted?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"A little\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Exhausted\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            {/* Nausea?         */}\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text> Any feeling of sickness or nausea?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Not at all\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"A little\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"I need assistance!\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n\n            <Form.Group>\n              {[\"checkbox\"].map((type) => (\n                <div key={`inline-${type}`} className=\"mb-3\">\n                  <Form.Text>Sudden loss or gain of weight?</Form.Text>\n                  <Form.Check\n                    inline\n                    label=\"Yes\"\n                    type={type}\n                    id={`inline-${type}-1`}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"No\"\n                    type={type}\n                    id={`inline-${type}-2`}\n                  />\n                </div>\n              ))}\n            </Form.Group>\n          </fieldset>\n\n          <Form.Group as={Row}>\n            <Col sm={{ span: 10, offset: 2 }}>\n              <Button type=\"submit\" onClick={props.onHide}>\n                Submit\n              </Button>\n            </Col>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { BACKEND_URL_APPOINTMENTS, BACKEND_URL_GPS } from \"../Constant\";\n\nexport default function Appointment(props) {\n  const [vaccineType, setVaccineType] = useState(\"Covid-19\");\n  const [date, setDate] = useState(\"\");\n  const [gps, setGps] = useState([]);\n  const [gpid, setGpid] = useState(\"\");\n\n  useEffect(() => {\n    let token = localStorage.getItem(\"ptoken\");\n    if (!token) {\n      alert(\"Please login to make an appointment!\");\n      props.history.push(\"/patient\");\n    } else {\n      axios\n        .get(`${BACKEND_URL_GPS}`)\n        .then((response) => {\n          setGps(response.data);\n        })\n        .catch((err) => {\n          if (!err.response) {\n            console.log(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n          } else {\n            alert(err.response.data.message);\n          }\n        });\n    }\n  }, []);\n\n  const createAppointment = (event) => {\n    event.preventDefault();\n    if (!date || !vaccineType || !gpid) {\n      alert(\"Please fill in required field!\");\n    } else {\n      let info = JSON.parse(localStorage.getItem(\"ptoken\"));\n      let data = {\n        pid: info.pid,\n        name: info.name,\n        vaccineType: vaccineType,\n        date: date,\n        gpid: gpid,\n      };\n      axios\n        .post(`${BACKEND_URL_APPOINTMENTS}/create`, data)\n        .then((response) => {\n          console.log(response);\n          alert(response.data.message);\n          props.history.push(\"/patient/dashboard\");\n        })\n        .catch((err) => {\n          if (!err.response) {\n            console.log(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n          } else {\n            alert(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Book New Appointment</h2>\n        <Form onSubmit={(event) => createAppointment(event)} className=\"m-3\">\n          <Form.Group controlId=\"vaccination\">\n            <Form.Label>Vaccination Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={vaccineType}\n              readOnly\n              onChange={(e) => setVaccineType(e.target.value)}\n            >\n              <option>Covid-19</option>\n              <option>Influenza</option>\n              <option>Hepatitis</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"date\">\n            <Form.Label>Appointment Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              placeholder=\"Select date...\"\n              format=\"YYYY-Mmm-DD\"\n              value={date}\n              onChange={(event) => setDate(event.target.value)}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"generalpractitioner\">\n            <Form.Label>GP</Form.Label>\n            <Form.Control\n              as=\"select\"\n              defaultValue=\"Choose...\"\n              value={gpid}\n              onChange={(e) => setGpid(e.target.value)}\n            >\n              <option>Choose...</option>\n              {gps.map((element) => {\n                return (\n                  <option key={element.gpid} value={element.gpid}>\n                    {element.clinicName}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_GPS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function GPLogin(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitLogin = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      alert(\"Please key in required field!\");\n    }\n    let data = {\n      email: email,\n      password: password,\n    };\n    axios\n      .post(`${BACKEND_URL_GPS}/login`, data)\n      .then((response) => {\n        localStorage.setItem(\"gptoken\", JSON.stringify(response.data.gptoken));\n        props.history.push(\"/gp/dashboard\");\n      })\n      .catch((err) => {\n        if (!err.response) {\n          console.log(err);\n        } else if (!err.response.data) {\n          console.log(err.response);\n        } else {\n          alert(err.response.data.message);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <h1>GP Portal</h1>\n      <Form className=\"m-3\">\n        <Form.Group controlId=\"login\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email address\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n        <Button\n          type=\"submit\"\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={(event) => submitLogin(event)}\n        >\n          Sign in\n        </Button>\n        <Link to=\"gp/register\">\n          <Button variant=\"primary\" className=\"mx-2\">\n            Register\n          </Button>\n        </Link>\n      </Form>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BACKEND_URL_APPOINTMENTS, BACKEND_URL_PATIENTS } from \"../../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default function CheckingIn(props) {\n  const [appointment, setAppointment] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [appointmentDate, setAppointmentDate] = useState(\"\");\n  const [NRIC, setNRIC] = useState(\"\");\n\n  useEffect(() => {\n    setID(appointment.aid);\n    setName(appointment.name);\n    setAppointmentDate(appointment.date);\n  }, [appointment]);\n\n  const checkIn = (event) => {\n    event.preventDefault();\n    if (!id || !name || !appointmentDate) {\n      alert(\"Please enter required field!\");\n    } else {\n      axios\n        .put(`${BACKEND_URL_APPOINTMENTS}/id/${id}/status/completed`)\n        .then((response) => {\n          console.log(response);\n          alert(response.data.message);\n          setNRIC(\"\");\n          setID(\"\");\n          setName(\"\");\n          setAppointmentDate(\"\");\n          setAppointment(\"\");\n          props.toggleUpdate();\n        })\n        .catch((err) => {\n          if (!err.response) {\n            console.log(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n          } else {\n            alert(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  const fetchData = (event) => {\n    event.preventDefault();\n    let { gpid } = JSON.parse(localStorage.getItem(\"gptoken\"));\n    if (!NRIC) {\n      alert(\"Please enter NRIC to use this feature!\");\n    } else {\n      axios.get(`${BACKEND_URL_PATIENTS}/fetch/${NRIC}`).then((response) => {\n        console.log(response);\n        axios\n          .get(\n            `${BACKEND_URL_APPOINTMENTS}/gpid/${gpid}/email/${response.data.email}`\n          )\n          .then((response) => {\n            console.log(response);\n            if (response.data.length === 1) {\n              setAppointment(response.data[0]);\n              alert(\"Appointment found!\");\n            }\n          })\n          .catch((err) => {\n            if (!err.response) {\n              console.log(err);\n            } else if (!err.response.data) {\n              console.log(err.response);\n            } else {\n              alert(err.response.data.message);\n            }\n          });\n      });\n    }\n  };\n  return (\n    <>\n      <Form onSubmit={(event) => checkIn(event)} className=\"m-3\">\n        <h2>Key in</h2>\n        <Form.Group controlId=\"nric\">\n          <Form.Label>NRIC / FIN</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Type in NRIC / FIN to fill in data.\"\n            value={NRIC}\n            onChange={(event) => setNRIC(event.target.value)}\n          />\n          <Button\n            className=\"my-3\"\n            variant=\"outline-primary\"\n            onClick={(event) => fetchData(event)}\n          >\n            fetch info\n          </Button>\n        </Form.Group>\n        <h2>-------------------- Or --------------------</h2>\n        <Form.Group controlId=\"id\">\n          <Form.Label>Appointment ID</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter appointment ID\"\n            value={id}\n            required\n            onChange={(event) => setID(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"patientname\">\n          <Form.Label>Patient's Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter patient's name\"\n            value={name}\n            required\n            onChange={(event) => setName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"vaccinetype\">\n          <Form.Label>Vaccination Type</Form.Label>\n          <Form.Control type=\"text\" value=\"Covid-19\" readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"date\">\n          <Form.Label>Appointment Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            placeholder=\"Enter date of appointment\"\n            value={appointmentDate}\n            required\n            onChange={(event) => setAppointmentDate(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button\n          variant=\"outline-primary\"\n          type=\"submit\"\n          className=\"m-5\"\n          disabled={!id || !name || !appointmentDate ? true : false}\n        >\n          Check-In\n        </Button>\n\n        {/* <Button variant=\"outline-primary\" type=\"submit\" className=\"m-5\">\n              Scan QR Code\n            </Button> */}\n      </Form>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default function Edit(props) {\n  return (\n    <>\n      <Form\n        className=\"m-3\"\n        onSubmit={(event) => {\n          props.updateAppointment(event, props.edit.aid);\n        }}\n      >\n        <Form.Group controlId=\"patientname\">\n          <Form.Label>Patient's Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter patient's name\"\n            value={props.edit.name}\n            readOnly\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"vaccinetype\">\n          <Form.Label>Vaccination Type</Form.Label>\n          <Form.Control type=\"text\" value=\"Covid-19\" readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"oridate\">\n          <Form.Label>Original Appointment Date</Form.Label>\n          <Form.Control type=\"date\" value={props.edit.date} readOnly />\n        </Form.Group>\n\n        <Form.Group controlId=\"newdate\">\n          <Form.Label>New Appointment Date</Form.Label>\n          <Form.Control\n            type=\"date\"\n            placeholder=\"Enter date of appointment\"\n            value={props.newAppointmentDate}\n            onChange={(event) =>\n              props.setNewAppointmentDate(event.target.value)\n            }\n          />\n        </Form.Group>\n\n        <Button variant=\"outline-primary\" type=\"submit\" className=\"m-5\">\n          Update\n        </Button>\n\n        <Button\n          variant=\"outline-danger\"\n          type=\"button\"\n          className=\"m-5\"\n          onClick={() => props.setEdit(null)}\n        >\n          Cancel\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BACKEND_URL_APPOINTMENTS } from \"../Constant\";\nimport { Button, Tabs, Tab } from \"react-bootstrap\";\nimport CheckingIn from \"./Tabs/CheckingIn\";\nimport Appointments from \"./Tabs/Appointments\";\nimport Edit from \"./Tabs/Edit\";\n\nexport default function GPDashboard(props) {\n  const [appointments, setAppointments] = useState([]);\n  const [thisUser, setThisUser] = useState(null);\n  const [newAppointmentDate, setNewAppointmentDate] = useState(\"\");\n  // const [patients, setPatients] = useState([]);\n  const [edit, setEdit] = useState(null);\n  const [update, setUpdate] = useState(false);\n\n  useEffect(() => {\n    let info = JSON.parse(localStorage.getItem(\"gptoken\"));\n    if (!info) {\n      alert(\"Please login to use this page!\");\n      props.history.push(\"/gp\");\n    } else {\n      setThisUser(info);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (thisUser) {\n      axios\n        .get(`${BACKEND_URL_APPOINTMENTS}/gpid/${thisUser.gpid}`)\n        .then((response) => {\n          setAppointments(response.data);\n        })\n        .catch((err) => {\n          if (!err.response) {\n            console.log(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n          } else {\n            alert(err.response.data.message);\n          }\n        });\n    }\n  }, [thisUser, update]);\n\n  const toggleUpdate = () => {\n    setUpdate(!update);\n  };\n\n  const deleteAppointment = (id, info) => {\n    console.log(id);\n    console.log(info);\n  };\n\n  const check = (event) => {\n    event.preventDefault();\n    console.log(thisUser);\n  };\n\n  const updateAppointment = (event, id) => {\n    event.preventDefault();\n    if (!newAppointmentDate) {\n      alert(\"Pleasee enter a date!\");\n    } else {\n      let data = {\n        date: newAppointmentDate,\n      };\n      axios\n        .put(`${BACKEND_URL_APPOINTMENTS}/id/${id}/changeDate`, data)\n        .then((response) => {\n          alert(response.data.message);\n          setEdit(null);\n          setUpdate(!update);\n        })\n        .catch((err) => {\n          if (!err.response) {\n            console.log(err);\n          } else if (!err.response.data) {\n            console.log(err.response);\n          } else {\n            alert(err.response.data.message);\n          }\n        });\n    }\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"gptoken\");\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"App mt-5\">\n      <h2>GP Dashboard</h2>\n      <Button\n        variant=\"outline-danger\"\n        onClick={(event) => {\n          check(event);\n        }}\n      >\n        Check\n      </Button>\n      <Tabs defaultActiveKey=\"appointments\" id=\"uncontrolled-tab-example\">\n        {thisUser && (\n          <Tab eventKey=\"gpinfo\" title=\"GP Info\">\n            <h1 className=\"m-5\">My Clinic's Info</h1>\n            <div className=\"mx-5 text-left\">\n              <h2>Name: {thisUser.clinicName}</h2>\n              <h4>Address: {thisUser.address}</h4>\n              <h4>E-mail: {thisUser.email}</h4>\n            </div>\n          </Tab>\n        )}\n\n        <Tab eventKey=\"appointments\" title=\"Appointments\">\n          <h1 className=\"m-5\">Appointments</h1>\n          <div className=\"mx-5\">\n            <Appointments\n              appointments={appointments}\n              setEdit={setEdit}\n              deleteAppointment={deleteAppointment}\n            />\n          </div>\n        </Tab>\n\n        <Tab eventKey=\"checkin\" title=\"Check Patient In\">\n          <CheckingIn toggleUpdate={toggleUpdate} />\n        </Tab>\n\n        {edit && thisUser && (\n          <Tab\n            eventKey=\"edit\"\n            title={\n              \"Edit Appointment: S/N \" +\n              (appointments\n                .map(function (e) {\n                  return e.aid;\n                })\n                .indexOf(edit.aid) +\n                1)\n            }\n          >\n            <Edit\n              edit={edit}\n              newAppointmentDate={newAppointmentDate}\n              setNewAppointmentDate={setNewAppointmentDate}\n              setEdit={setEdit}\n              updateAppointment={updateAppointment}\n            />\n          </Tab>\n        )}\n        {/* Appointments */}\n        {/* user scan in */}\n        {/* Scan Appointment check-in */}\n      </Tabs>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { BACKEND_URL_GPS } from \"../Constant\";\nimport { Button, Form } from \"react-bootstrap\";\n\nfunction GPRegister(props) {\n  const [clinicName, setClinicName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [adminCode, setAdminCode] = useState(\"\");\n\n  const register = (event) => {\n    event.preventDefault();\n    if (\n      !clinicName ||\n      !address ||\n      !email ||\n      !password ||\n      !confirmPassword ||\n      !adminCode\n    ) {\n      alert(\"Please fill in required field!\");\n    } else if (password === confirmPassword) {\n      axios\n        .post(`${BACKEND_URL_GPS}/create`, {\n          clinicName: clinicName,\n          address: address,\n          email: email,\n          password: password,\n          adminCode: adminCode,\n        })\n        .then((res) => {\n          alert(res.data.message);\n          props.history.push(\"/gp\");\n        })\n        .catch((error) => {\n          if (!error.response) {\n            console.log(error);\n          } else if (!error.response.data) {\n            console.log(error.response);\n          } else {\n            alert(error.response.data.message);\n          }\n        });\n    } else {\n      alert(\"Confirm password and password not matched!\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>GP Register</h1>\n      <Form onSubmit={(event) => register(event)} className=\"m-3\">\n        <Form.Group controlId=\"clinicname\">\n          <Form.Label>Clinic Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Clinic's name\"\n            required\n            value={clinicName}\n            onChange={(event) => setClinicName(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"address\"\n            placeholder=\"last name\"\n            required\n            value={address}\n            onChange={(event) => setAddress(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"email\"\n            required\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"password(8 characters)\"\n            required\n            minLength=\"8\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmpassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"confirm password\"\n            required\n            minLength=\"8\"\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"admincode\">\n          <Form.Label>Admin Code</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Admin code\"\n            required\n            value={adminCode}\n            onChange={(event) => setAdminCode(event.target.value)}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default GPRegister;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Testing from \"./components/Testing\";\nimport Main from \"./components/Main\";\nimport PatientLogin from \"./components/Patient/PatientLogin\";\nimport PatientRegister from \"./components/Patient/PatientRegister\";\nimport PTDashboard from \"./components/Patient/PTDashboard\";\nimport Appointment from \"./components/Patient/Appointment\";\nimport GPLogin from \"./components/GP/GPLogin\";\nimport GPDashboard from \"./components/GP/GPDashboard\";\nimport GPRegister from \"./components/GP/GPRegister\";\n\nfunction App() {\n  return (\n    <div className=\"w-75 mt-5 mx-auto\">\n      <Testing />\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/patient/register\" component={PatientRegister} />\n        <Route path=\"/patient/dashboard\" component={PTDashboard} />\n        <Route path=\"/patient/appointment\" component={Appointment} />\n        <Route path=\"/gp/register\" component={GPRegister} />\n        <Route path=\"/gp/dashboard\" component={GPDashboard} />\n        <Route path=\"/patient\" component={PatientLogin} />\n        <Route path=\"/gp\" component={GPLogin} />\n        {/* <Testing /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}